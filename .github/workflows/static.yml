# # Simple workflow for deploying static content to GitHub Pages
# name: Deploy static content to Pages

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # Single deploy job since we're just deploying
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       - name: Install, build, and upload your site outuput
#         uses: withastro/action@v2
#         with: 
#           path: '.'
#           node-version: 22
#           package-manager: npm@latest
#       - name: Setup Pages
#         uses: actions/configure-pages@v5
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v4

name: Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - name: Install, build, and upload your site
        uses: withastro/action@v4
        with:
          # path: . # The root location of your Astro project inside the repository. (optional)
          node-version: 22 # The specific version of Node that should be used to build your site. Defaults to 18. (optional)
          package-manager: npm@latest # The Node package manager that should be used to install dependencies and build your site. Automatically detected based on your lockfile. (optional)

  deploy:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:

      - name: copy
        run: |
          cp ./launcher/version-lin.json ./dist/launcher/*.json

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
